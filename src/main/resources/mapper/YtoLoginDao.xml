<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="yto.net.cn.dao.YtoLoginDao">
    <resultMap id="BaseResultMap" type="yto.net.cn.bean.YtoLogin">
        <id column="login_id" property="loginId" jdbcType="BIGINT"/>
        <result column="login_username" property="loginUsername" jdbcType="VARCHAR"/>
        <result column="login_password" property="loginPassword" jdbcType="VARCHAR"/>
        <result column="login_phone_number" property="loginPhoneNumber" jdbcType="VARCHAR"/>
        <result column="login_email" property="loginEmail" jdbcType="VARCHAR"/>
        <result column="wechat_openid" property="wechatOpenid" jdbcType="VARCHAR"/>
        <result column="header_url" property="headerUrl" jdbcType="VARCHAR"/>
        <result column="user_type" property="userType" jdbcType="INTEGER"/>
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>
        <result column="update_time" property="updateTime" jdbcType="TIMESTAMP"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
        <if test="fields == null">
            login_id, login_username, login_password, login_phone_number, login_email, wechat_openid,
            header_url, user_type, create_time, update_time
        </if>
        <if test="fields != null">
            ${fields}
        </if>
    </sql>
    <select id="selectByExample" resultMap="BaseResultMap" parameterType="yto.net.cn.bean.YtoLoginQuery">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from yto_login
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
        <if test="startRow != null">
            limit #{startRow} , #{pageSize}
        </if>
    </select>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long">
        select login_id,
               login_username,
               login_password,
               login_phone_number,
               login_email,
               wechat_openid,
               header_url,
               user_type,
               create_time,
               update_time
        from yto_login
        where login_id = #{loginId,jdbcType=BIGINT}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        delete
        from yto_login
        where login_id = #{loginId,jdbcType=BIGINT}
    </delete>
    <delete id="deleteByExample" parameterType="yto.net.cn.bean.YtoLoginQuery">
        delete from yto_login
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="yto.net.cn.bean.YtoLogin">
        insert into yto_login (login_id,
                               login_username,
                               login_password,
                               login_phone_number,
                               login_email,
                               wechat_openid,
                               header_url,
                               user_type,
                               create_time,
                               update_time)
        values (#{loginId,jdbcType=BIGINT},
                #{loginUsername,jdbcType=VARCHAR},
                #{loginPassword,jdbcType=VARCHAR},
                #{loginPhoneNumber,jdbcType=VARCHAR},
                #{loginEmail,jdbcType=VARCHAR},
                #{wechatOpenid,jdbcType=VARCHAR},
                #{headerUrl,jdbcType=VARCHAR},
                #{userType,jdbcType=INTEGER},
                now(),
                now())
    </insert>
    <insert id="insertSelective" parameterType="yto.net.cn.bean.YtoLogin">
        insert into yto_login
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="loginId != null">
                login_id,
            </if>
            <if test="loginUsername != null">
                login_username,
            </if>
            <if test="loginPassword != null">
                login_password,
            </if>
            <if test="loginPhoneNumber != null">
                login_phone_number,
            </if>
            <if test="loginEmail != null">
                login_email,
            </if>
            <if test="wechatOpenid != null">
                wechat_openid,
            </if>
            <if test="headerUrl != null">
                header_url,
            </if>
            <if test="userType != null">
                user_type,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="updateTime != null">
                update_time,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="loginId != null">
                #{loginId,jdbcType=BIGINT},
            </if>
            <if test="loginUsername != null">
                #{loginUsername,jdbcType=VARCHAR},
            </if>
            <if test="loginPassword != null">
                #{loginPassword,jdbcType=VARCHAR},
            </if>
            <if test="loginPhoneNumber != null">
                #{loginPhoneNumber,jdbcType=VARCHAR},
            </if>
            <if test="loginEmail != null">
                #{loginEmail,jdbcType=VARCHAR},
            </if>
            <if test="wechatOpenid != null">
                #{wechatOpenid,jdbcType=VARCHAR},
            </if>
            <if test="headerUrl != null">
                #{headerUrl,jdbcType=VARCHAR},
            </if>
            <if test="userType != null">
                #{userType,jdbcType=INTEGER},
            </if>
            <if test="createTime != null">
                now(),
            </if>
            <if test="updateTime != null">
                now(),
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="yto.net.cn.bean.YtoLoginQuery" resultType="java.lang.Integer">
        select count(*) from yto_login
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update yto_login
        <set>
            <if test="record.loginId != null">
                login_id = #{record.loginId,jdbcType=BIGINT},
            </if>
            <if test="record.loginUsername != null">
                login_username = #{record.loginUsername,jdbcType=VARCHAR},
            </if>
            <if test="record.loginPassword != null">
                login_password = #{record.loginPassword,jdbcType=VARCHAR},
            </if>
            <if test="record.loginPhoneNumber != null">
                login_phone_number = #{record.loginPhoneNumber,jdbcType=VARCHAR},
            </if>
            <if test="record.loginEmail != null">
                login_email = #{record.loginEmail,jdbcType=VARCHAR},
            </if>
            <if test="record.wechatOpenid != null">
                wechat_openid = #{record.wechatOpenid,jdbcType=VARCHAR},
            </if>
            <if test="record.headerUrl != null">
                header_url = #{record.headerUrl,jdbcType=VARCHAR},
            </if>
            <if test="record.userType != null">
                user_type = #{record.userType,jdbcType=INTEGER},
            </if>
            <if test="record.createTime != null">
                create_time = now(),
            </if>
            <if test="record.updateTime != null">
                update_time = now(),
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update yto_login
        set login_id = #{record.loginId,jdbcType=BIGINT},
        login_username = #{record.loginUsername,jdbcType=VARCHAR},
        login_password = #{record.loginPassword,jdbcType=VARCHAR},
        login_phone_number = #{record.loginPhoneNumber,jdbcType=VARCHAR},
        login_email = #{record.loginEmail,jdbcType=VARCHAR},
        wechat_openid = #{record.wechatOpenid,jdbcType=VARCHAR},
        header_url = #{record.headerUrl,jdbcType=VARCHAR},
        user_type = #{record.userType,jdbcType=INTEGER},
        create_time = now(),
        update_time = now()
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="yto.net.cn.bean.YtoLogin">
        update yto_login
        <set>
            <if test="loginUsername != null">
                login_username = #{loginUsername,jdbcType=VARCHAR},
            </if>
            <if test="loginPassword != null">
                login_password = #{loginPassword,jdbcType=VARCHAR},
            </if>
            <if test="loginPhoneNumber != null">
                login_phone_number = #{loginPhoneNumber,jdbcType=VARCHAR},
            </if>
            <if test="loginEmail != null">
                login_email = #{loginEmail,jdbcType=VARCHAR},
            </if>
            <if test="wechatOpenid != null">
                wechat_openid = #{wechatOpenid,jdbcType=VARCHAR},
            </if>
            <if test="headerUrl != null">
                header_url = #{headerUrl,jdbcType=VARCHAR},
            </if>
            <if test="userType != null">
                user_type = #{userType,jdbcType=INTEGER},
            </if>
            <if test="createTime != null">
                create_time = now(),
            </if>
            <if test="updateTime != null">
                update_time = now(),
            </if>
        </set>
        where login_id = #{loginId,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="yto.net.cn.bean.YtoLogin">
        update yto_login
        set login_username     = #{loginUsername,jdbcType=VARCHAR},
            login_password     = #{loginPassword,jdbcType=VARCHAR},
            login_phone_number = #{loginPhoneNumber,jdbcType=VARCHAR},
            login_email        = #{loginEmail,jdbcType=VARCHAR},
            wechat_openid      = #{wechatOpenid,jdbcType=VARCHAR},
            header_url         = #{headerUrl,jdbcType=VARCHAR},
            user_type          = #{userType,jdbcType=INTEGER},
            create_time        = now(),
            update_time        = now()
        where login_id = #{loginId,jdbcType=BIGINT}
    </update>

    <!--根据手机号和密码登陆-->
    <select id="selectByPhonePass" parameterType="string" resultMap="BaseResultMap">
        select login_id,
               login_username,
               login_password,
               login_phone_number,
               login_email,
               wechat_openid,
               header_url,
               user_type,
               create_time,
               update_time
        from yto_login
        where login_phone_number = #{phone}
          and login_password = #{password}
    </select>

    <!--根据手机号和密码查询-->
    <select id="searchByPhonePass" parameterType="string" resultMap="BaseResultMap">
        select login_id,
               login_username,
               login_password,
               login_phone_number,
               login_email,
               wechat_openid,
               header_url,
               user_type,
               create_time,
               update_time
        from yto_login
        where login_phone_number = #{phone}
          and login_password = #{password}
    </select>

    <!--根据邮箱和密码查询-->
    <select id="searchByEmailPass" parameterType="string" resultMap="BaseResultMap">
        select login_id,
               login_username,
               login_password,
               login_phone_number,
               login_email,
               wechat_openid,
               header_url,
               user_type,
               create_time,
               update_time
        from yto_login
        where login_email = #{email}
          and login_password = #{password}
    </select>

    <!--根据wechat_openid查询-->
    <select id="searchByOpenId" parameterType="string" resultMap="BaseResultMap">
        select login_id,
               login_username,
               login_password,
               login_phone_number,
               login_email,
               wechat_openid,
               header_url,
               user_type,
               create_time,
               update_time
        from yto_login
        where wechat_openid = #{open_id}
    </select>

    <!--根据手机号修改密码-->
    <update id="updatePassByPhone" parameterType="string">
        update yto_login
        set login_password = #{password,jdbcType=VARCHAR}
        where login_phone_number = #{phone}
    </update>

    <!--根据邮箱修改密码-->
    <update id="updatePassByEmail" parameterType="string">
        update yto_login
        set login_password = #{password,jdbcType=VARCHAR}
        where login_email = #{email}
    </update>

    <!--根据手机号修改用户名-->
    <update id="updateNameByPhone" parameterType="string">
        update yto_login
        set login_username = #{name,jdbcType = VARCHAR}
        where login_phone_number = #{phone}
    </update>

    <!--根据邮箱修改用户名-->
    <update id="updateNameByEmail" parameterType="string">
        update yto_login
        set login_username = #{name,jdbcType = VARCHAR}
        where login_email = #{email}
    </update>

    <!--根据手机号和密码修改邮箱-->
    <update id="updateEmailByPhonePass" parameterType="string">
        update yto_login
        set login_email = #{email,jdbcType = VARCHAR}
        where login_password = #{password}
        AND login_phone_number = #{phone}
    </update>

    <!--根据邮箱和密码修改手机号-->
    <update id="updatePhoneByEmailPass" parameterType="string">
        update yto_login
        set login_phone_number = #{phone,jdbcType = VARCHAR}
        where login_email = #{email}
        AND login_password = #{password}
    </update>

    <!--根据id修改头像url-->
    <update id="updateHeaderUrlById">
        update yto_login
        set header_url = #{header_url,jdbcType = VARCHAR}
        where login_id = #{id,jdbcType = BIGINT}
    </update>
</mapper>